{
  "parameters": {
    "FunctionName": {
      "type": "string",
      "defaultValue": "vmPowerMonitor"
    },
    "StorageAccountNamePrefix": {
      "type": "string",
      "defaultValue": "gpv2afweb",
      "metadata": {
        "description": "Storage account name must be unique."
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "StorageAccountKind": {
      "type": "string",
      "defaultValue": "StorageV2",
      "metadata": {
        "description": "Storage account kind must be v2 for static web site."
      }
    },
    "SupportsHttpsTrafficOnly": {
      "type": "bool",
      "defaultValue": true
    },
    "SendgridApiKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "create free account on sendgrid and paste in generated api key or leave blank if no email notification is needed."
      }
    },
    "AzureWebJobsDisableHomePage": {
      "type": "string",
      "defaultValue": "False",
      "metadata": {
        "description": "enables or disables the azure function home page showing function status."
      }
    },
    "ScheduleAppSettings": {
      "type": "string",
      "defaultValue": "0 0 */4 * * *",
      "metadata": {
        "description": "cron value for function default schedule every 4 hours: 0 0 */4 * * *"
      }
    },
    "AzureClientId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "azure client id needed for function to authenticate / impersonate"
      }
    },
    "AzureSecret": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "secret for azure client id"
      }
    },
    "FunctionJsonStorageContainer": {
      "type": "string",
      "defaultValue": "$web",
      "metadata": {
        "description": "$web is the blob name for storage v2 accounts using static web site"
      }
    },
    "ConsecutivePoweredOnEmailCount": {
      "type": "string",
      "defaultValue": "3",
      "metadata": {
        "description": "number of discoveries of vm before sending email. function runs every 4 hours."
      }
    },
    "ConsecutivePoweredOnActionCount": {
      "type": "string",
      "defaultValue": "4",
      "metadata": {
        "description": "number of discoveries of vm before sending deallocate action. function runs every 4 hours."
      }
    },
    "FromEmail": {
      "type": "string",
      "defaultValue": "afVmPowerMonitor@azureFunction.com",
      "metadata": {
        "description": "from email address used for sending emails"
      }
    },
    "ToEmail": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "to email address used for sending emails"
      }
    },
    "KustoIncludeFilter": {
      "type": "string",
      "defaultValue": ".",
      "metadata": {
        "description": "regex pattern for kusto resources to be included in power management. '.' is include everything, empty '' is exclude all / disable."
      }
    },
    "KustoExcludeFilter": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "regex pattern for kusto resources to be excluded in power management. '.' is exclude everything, empty '' is include all."
      }
    },
    "VmIncludeFilter": {
      "type": "string",
      "defaultValue": ".",
      "metadata": {
        "description": "regex pattern for vm resources to be included in power management. '.' is include everything, empty '' is exclude all / disable."
      }
    },
    "VmExcludeFilter": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "regex pattern for vm resources to be excluded in power management. '.' is exclude everything, empty '' is include all."
      }
    },
    "VmssIncludeFilter": {
      "type": "string",
      "defaultValue": ".",
      "metadata": {
        "description": "regex pattern for vmss resources to be included in power management. '.' is include everything, empty '' is exclude all / disable."
      }
    },
    "VmssExcludeFilter": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "regex pattern for vmss resources to be excluded in power management. '.' is exclude everything, empty '' is include all."
      }
    }
  },
  "variables": {
    "apiVersion": "2016-09-01",
    "sourceCodeBranch": "master",
    "sourceCodeManualIntegration": true,
    "sourceCodeRepositoryURL": "https://github.com/jagilber/afVmPowerMonitor.git",
    "storageAccountName": "[take( toLower( concat( parameters('StorageAccountNamePrefix'), uniqueString(resourceGroup().id) ) ),24)]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "webSiteName": "[take( toLower( concat( parameters('FunctionName'), uniqueString(resourceGroup().id) ) ),24)]"
  },
  "resources": [
    {
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('microsoft.insights/components/', parameters('FunctionName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[concat(toLower(variables('webSiteName')), 'share')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('FunctionName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "Project",
              "value": "afVmPowerMonitor"
            }
          ]
        },
        "name": "[variables('webSiteName')]",
        "clientAffinityEnabled": false,
        "reserved": false
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]",
            "[resourceId('Microsoft.Web/Sites/sourcecontrols', variables('webSiteName'), 'web')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "AzureWebJobsDisableHomePage": "[parameters('AzureWebJobsDisableHomePage')]",
            "ScheduleAppSettings": "[parameters('ScheduleAppSettings')]",
            "SendgridApiKey": "[parameters('SendgridApiKey')]",
            "AzureTenantId": "[subscription().tenantId]",
            "AzureClientId": "[parameters('AzureClientId')]",
            "AzureSecret": "[parameters('AzureSecret')]",
            "AzureSubscriptionId": "[subscription().subscriptionId]",
            "FunctionJsonStorageContainer": "[parameters('FunctionJsonStorageContainer')]",
            "ApiVersion": "[variables('apiVersion')]",
            "ConsecutivePoweredOnEmailCount": "[parameters('ConsecutivePoweredOnEmailCount')]",
            "ConsecutivePoweredOnActionCount": "[parameters('ConsecutivePoweredOnActionCount')]",
            "FromEmail": "[parameters('FromEmail')]",
            "ToEmail": "[parameters('ToEmail')]",
            "KustoIncludeFilter": "[parameters('KustoIncludeFilter')]",
            "KustoExcludeFilter": "[parameters('KustoExcludeFilter')]",
            "VmIncludeFilter": "[parameters('VmIncludeFilter')]",
            "VmExcludeFilter": "[parameters('VmExcludeFilter')]",
            "VmssIncludeFilter": "[parameters('VmssIncludeFilter')]",
            "VmssExcludeFilter": "[parameters('VmssExcludeFilter')]",
            "FUNCTIONS_EXTENSION_VERSION": "~2",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTSHARE": "[concat(toLower(variables('webSiteName')), 'share')]",
            "WEBSITE_NODE_DEFAULT_VERSION": "8.11.1",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', parameters('FunctionName')), '2015-05-01').InstrumentationKey]"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('sourceCodeRepositoryURL')]",
            "branch": "[variables('sourceCodeBranch')]",
            "IsManualIntegration": "[variables('sourceCodeManualIntegration')]"
          }
        }
      ],
      "apiVersion": "2018-02-01",
      "location": "[resourcegroup().location]",
      "kind": "functionapp"
    },
    {
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "location": "[resourcegroup().location]",
      "properties": {
        "SupportsHttpsTrafficOnly": "[parameters('SupportsHttpsTrafficOnly')]"
      },
      "dependsOn": [],
      "sku": {
        "name": "[parameters('StorageAccountType')]"
      },
      "kind": "[parameters('StorageAccountKind')]"
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[parameters('FunctionName')]",
      "type": "microsoft.insights/components",
      "location": "[resourcegroup().location]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('FunctionName'))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[parameters('FunctionName')]",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    }
  ],
  "outputs": {
    "webSiteName": {
      "type": "string",
      "value": "[variables('webSiteName')]"
    },
    "StorageAccountName": {
      "type": "string",
      "value": "[variables('StorageAccountName')]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0"
}